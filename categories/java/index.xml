<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on Gildas Cuisinier</title><link>https://www.gcuisinier.net/categories/java/</link><description>Recent content in Java on Gildas Cuisinier</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 03 Apr 2012 08:00:00 +0100</lastBuildDate><atom:link href="https://www.gcuisinier.net/categories/java/index.xml" rel="self" type="application/rss+xml"/><item><title>Installer CRaSH sous Mac OS X</title><link>https://www.gcuisinier.net/blog/2012/04/installer-crash-sous-mac-os-x/</link><pubDate>Tue, 03 Apr 2012 08:00:00 +0100</pubDate><guid>https://www.gcuisinier.net/blog/2012/04/installer-crash-sous-mac-os-x/</guid><description>&lt;h2 id="crash-cest-quoi-">CRaSH, c&amp;rsquo;est quoi ?&lt;/h2>
&lt;p>Derrière un nom qui ferait fuir n&amp;rsquo;importe qui, se cache un outil assez prometteur. CRaSH est un projet Open Source, sous licence LGPL, créé par Julien Viet. Et plus exactement un Shell qui permet de se connecter à une JVM et de la contrôler à l&amp;rsquo;aide de commande développée en Groovy.&lt;/p>
&lt;p>Il est assez extensible, mais de base il vient avec des commandes pour JDBC, le logging, les Thread.
Pour en savoir plus, je vous recommande la lecture de la &lt;a href="http://julienviet.com/crash/">documentation&lt;/a>, de regarder &lt;a href="http://blog.julienviet.com/2012/04/13/crash-standalone/">un screencast&lt;/a> ou de parcourir &lt;a href="http://www.slideshare.net/jviet/crash-12638600">les slides&lt;/a> de Julien lors de son quickies à Devoxx France&lt;/p></description></item><item><title>Spring MongoDB en 5 minutes</title><link>https://www.gcuisinier.net/blog/2012/03/spring-mongodb-en-5-minutes/</link><pubDate>Sat, 17 Mar 2012 08:00:00 +0100</pubDate><guid>https://www.gcuisinier.net/blog/2012/03/spring-mongodb-en-5-minutes/</guid><description>Créer sa base MongoDB Bien qu&amp;rsquo;il soit assez simple d&amp;rsquo;installer MongoDB sur un poste de développement, avec l&amp;rsquo;arrivée du cloud et des SaaS, il est très simple et très rapide d&amp;rsquo;avoir une instance de Mongo. MongoHQoffre des solutions d&amp;rsquo;hébergement de Mongo à la demande, à plusieurs tarifs. L&amp;rsquo;offre starterest gratuite, mais apporte une limite de 16 Mo.
En plus d&amp;rsquo;héberger l&amp;rsquo;instance, MongoHQoffre également une interface graphique très pratique pour parcourir votre base, vos collections et leurs données, ou encore gérer les indexes.</description></item><item><title>Présentation de xdt4j</title><link>https://www.gcuisinier.net/blog/2012/03/pr%C3%A9sentation-de-xdt4j/</link><pubDate>Thu, 15 Mar 2012 08:00:00 +0100</pubDate><guid>https://www.gcuisinier.net/blog/2012/03/pr%C3%A9sentation-de-xdt4j/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Chez mon client, nous avons eu un besoin particulier : celui de pouvoir étendre des archetypes Maven.
Autrement dit, pouvoir créer un archetype qui se baserait sur un autre, et qui apporterait uniquement le delta de différence.&lt;/p>
&lt;p>Pour certain fichier, nous n&amp;rsquo;avons pas eu le choix, nous avons été obliger de fournir une nouvelle version qui remplacerait la version initiale, par exemple les fichiers binaires tels que les images.&lt;/p>
&lt;p>Par contre, pour le fichiers XML, et en particulier les fichiers pom.xml ou encore le fichier archetype-metadata.xml, c&amp;rsquo;était plus problématique. En effet, en cas de modification de l&amp;rsquo;un des ces fichiers dans l&amp;rsquo;archetype de base, nous aurions été obligé de copier ceux-ci, et ré-introduire les delta à la main&amp;hellip; ce qui ne serait pas très productifs.&lt;/p>
&lt;p>Partant du fait que ces fichiers sont du XML, il me semblait plus logique de partir du fichier de base et de ne décrire que les transformations à lui apporter. Quand on parle de transformation en XML, on pense tout de suite à XSLT.
Mais il faut avouer que s&amp;rsquo;il est très puissant, il n&amp;rsquo;est pas forcément le plus simple à appréhender.&lt;/p>
&lt;p>J&amp;rsquo;ai donc cherché des alternatives plus simples. En discutant avec un consultant .Net, celui-ci m&amp;rsquo;a présenté le système qui est utilisé par Microsoft pour gérer les fichiers de configuration de IIS : XML Document Transform.
J&amp;rsquo;ai tout de suite trouvé cette solution élégante pour répondre à notre problème.&lt;/p>
&lt;p>Par chance, quelqu&amp;rsquo;un a eu la bonne idée de faire une première implémentation OpenSource (&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted --> en se basant sur tout les exemples qu&amp;rsquo;il à trouvé dans la documentation et sur internet.
Son implémentation se basait sur des spécificités .Net, donc impossible de le porter tel quel en Java.
Cependant, son jeu de test était assez complet.&lt;/p>
&lt;p>Grâce à celui-ci tests, j&amp;rsquo;ai pu développer en TDD une implémentation en Java : &lt;!-- raw HTML omitted -->xdt4j&lt;!-- raw HTML omitted -->.&lt;/p></description></item></channel></rss>